plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.0"
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'org.openbroker'
version = '1.0-SNAPSHOT'
description = 'Library for Open Broker'

defaultTasks 'test'

project.ext {
    kotlin_version = '1.3.0'
    kotlin_api_version = '1.2'
    jvm_version = '1.8'
}

apply from: "jar.gradle"

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://jitpack.io" }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Cloud Events
    implementation 'com.github.open-broker:cloud-events-jvm:76dfa0814f'
    implementation 'com.github.open-broker:cloud-events-jvm:76dfa0814f:sources'

    // Jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.6'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version:'2.9.6'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.9.6'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.1")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = kotlin_api_version
        apiVersion = kotlin_api_version
        jvmTarget = jvm_version
        javaParameters = true   // Useful for reflection.
    }
}

compileJava {
    sourceCompatibility = jvm_version
    targetCompatibility = jvm_version
    options.incremental = true
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '4.10.2'
}
